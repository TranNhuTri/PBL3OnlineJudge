@model Problem
@{
    ViewData["Title"] = Model.Title;
    var listAuthors = Model.ProblemAuthors.Select(p => p.Author);
}

<div class="ProblemPage">
    <div class="grid">
        <div class="grid_row">
            <div class="grid_column-9">
                <div class="ProblemContent">
                    <h1 class="ProblemPageHeader">@Model.Title</h1>
                    @Html.Raw(@Model.Content)
                </div>
            </div>
            <div class="grid_column-3">
                <div class="ProblemMenu">
                    <div class="ProblemMenu_Buttons">
                        <a asp-controller = "Problem" asp-action = "Submit" asp-route-id = "@Model.ID" class = "ProblemMenu_Link">
                            <div class="ProblemSubmitButton button">
                                <i class="fas fa-upload"> </i>
                                Nộp bài
                            </div>
                        </a>
                        <a href="" class = "ProblemMenu_Link">
                            <div class="ProblemStatistictButton button">
                                <i class="fas fa-chart-pie"> </i>
                                Thống kê
                            </div>
                        </a>
                    </div>
                    <div class="ProblemPropertyContainer">
                        @if(!String.IsNullOrEmpty(Context.Session.GetString("UserName")))
                        {
                            var parms = new Dictionary<string, string>
                            {
                                {"problemID", Model.ID},
                                {"accountName", Context.Session.GetString("UserName")},
                            };
                            <a asp-controller = "Problem" asp-action = "Submissions" asp-all-route-data = '@parms' class = "CUDProblem">Lời giải của tôi</a>
                            if(Convert.ToInt32(Context.Session.GetString("TypeAccount")) == 1)
                            {
                                <a asp-controller = "Problem" asp-action = "Edit" asp-route-id = "@Model.ID" class = "CUDProblem">Sửa đề bài</a>
                                <p class = "CUDProblem" id = "DeleteProblemLink">Xóa đề bài</p>
                            }
                        }
                        
                        <p class = "ProblemProperty"><b>Mã bài: </b>@Model.ID</p>
                        <p class = "ProblemProperty"><b>Thời gian giới hạn: </b>@Model.TimeLimit s</p>
                        <p class = "ProblemProperty"><b>Bộ nhớ giới hạn: </b>@Model.MemoryLimit M</p>
                        <p class = "ProblemProperty"><b>Độ khó: </b>@Model.Difficulty</p>
                        <p class = "ProblemProperty"><b>Tác giả: </b></p>
                        <div>
                            @foreach (var author in listAuthors)
                            {
                                <span style="font-size: 16rem; font-weight: bold; color: #989898">@author.UserName  </span>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="Overlay">
    <div class="ConfirmDeleteProblem">
        <h1 class = "ConfirmDeleteProblem_Header">Xác nhận xóa bài @Model.Title</h1>
        <p class = "ConfirmDeleteProblem_Warning">Xóa đề bài có thể dẫn tới mất dữ liệu nộp bài của người dùng !!!</p>
        <div class = "ConfirmDeleteProblem_Buttons">
            <form asp-action = "Delete" asp-route-id = "@Model.ID">
                <input type="submit" class ="deleteButton DeleteProblem_Button DeleteButton" value="Xóa">
            </form>
            <button class="button DeleteProblem_Button CancelButton">Hủy</button>
        </div>
    </div>
</div>
@section Scripts
{
    <script type="text/javascript" charset="utf-8">
        var deleteProblemLink = document.getElementById("DeleteProblemLink");
        var overlay = document.querySelector(".Overlay");
        var appContainer = document.querySelector(".AppContainer");
        var confirmDeleteProblem = document.querySelector(".ConfirmDeleteProblem");

        if(deleteProblemLink != null)
        {
            deleteProblemLink.addEventListener('click', function()
            {
                overlay.classList.add("Overlay--active");
                appContainer.classList.add("AppContainer--isCovered");
                confirmDeleteProblem.style.top = String((window.innerHeight - confirmDeleteProblem.offsetHeight)/2) + "px";
                confirmDeleteProblem.style.left = String((window.innerWidth - confirmDeleteProblem.offsetWidth)/2) + "px";
            })
        }
        
        var cancelButton = document.querySelector(".CancelButton");
        cancelButton.addEventListener('click', function()
        {
            overlay.classList.remove("Overlay--active");
            appContainer.classList.remove("AppContainer--isCovered");
        })
    </script>
}