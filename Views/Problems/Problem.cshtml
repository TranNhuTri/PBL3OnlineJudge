@model Problem
@{
    ViewData["Title"] = Model.title;
    var listAuthors = Model.problemAuthors.Where(p => p.isDeleted == false).Select(p => p.author);
    var listCategories = Model.problemClassifications.Where(p => p.isDeleted == false).Select(p => p.category);
    var listSubmissions = Model.submissions.ToList();
    var listComments = (List<Comment>)ViewData["ListComments"];
}

<div class="problemPage">
    <div class="grid">
        <div class="grid_row">
            <div class="grid_column-9">
                <div class="problemContent">
                    <h1 class="problemPageHeader">@Model.title</h1>
                    @Html.Raw(@Model.content)
                    <div class="comments">
                        <div class="comments_header">
                            <i class="far fa-comments"></i>
                            <h1>Bình luận</h1>
                        </div>
                        <div class="listComments">
                            @if(listComments != null)
                            {
                                @await Html.PartialAsync("_ListComments", listComments)
                            }
                        </div>
                        <div class="comment_box" style="display: block;">
                            <form onsubmit="return PostRootComment('@Model.ID')">
                                <textarea name="content" id="editor" data-first = "1" cols="30" rows="10"></textarea>
                                <button class="button comment_button">Gửi</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <div class="grid_column-3">
                <div class="problemMenu">
                    <div class="problemMenu_Buttons">
                        <a asp-controller = "Problem" asp-action = "Submit" asp-route-id = "@Model.ID" class = "problemMenu_Link">
                            <div class="problemSubmitButton button">
                                <i class="fas fa-upload"> </i>
                                Nộp bài
                            </div>
                        </a>
                        <a href="" class = "problemMenu_Link">
                            <div class="problemStatistictButton button">
                                <i class="fas fa-chart-pie"> </i>
                                Thống kê
                            </div>
                        </a>
                    </div>
                    <div class="problemPropertyContainer">
                        @if(!String.IsNullOrEmpty(Context.Session.GetString("AccountName")))
                        {
                            var parms = new Dictionary<string, string>
                            {
                                {"problemID", Convert.ToString(Model.ID)},
                                {"accountName", Context.Session.GetString("AccountName")},
                            };
                            if(listSubmissions.Where(s => s.account.accountName == Context.Session.GetString("AccountName")).Select(s => s).ToList().Count > 0)
                            {
                                if(listSubmissions.Where(s => s.account.accountName == Context.Session.GetString("AccountName") && s.status == "Accepted").Select(s => s).ToList().Count > 0)
                                {
                                    <a asp-controller = "Problem" asp-action = "Submissions" asp-all-route-data = '@parms' class = "CUDProblem mySubmissions" style = "background-color:  #1dbfaf29">Lời giải của tôi</a>
                                }
                                else
                                {
                                    <a asp-controller = "Problem" asp-action = "Submissions" asp-all-route-data = '@parms' class = "CUDProblem mySubmissions" style = "background-color: #ff000021">Lời giải của tôi</a>
                                }
                            }
                            if(Convert.ToInt32(Context.Session.GetString("TypeAccount")) == 1)
                            {
                                <a asp-controller = "Problems" asp-action = "EditProblem" asp-route-id = "@Model.ID" class = "CUDProblem">Sửa đề bài</a>
                                <a asp-controller = "Problems" asp-action = "DeleteProblem" asp-route-id = "@Model.ID" class = "CUDProblem">Xóa đề bài</a>
                            }
                        }
                        
                        <p class = "problemProperty"><b>Mã bài: </b>@Model.ID</p>
                        <p class = "problemProperty"><b>Thời gian giới hạn: </b>@Model.timeLimit s</p>
                        <p class = "problemProperty"><b>Bộ nhớ giới hạn: </b>@Model.memoryLimit M</p>
                        <p class = "problemProperty"><b>Độ khó: </b>@Model.difficulty</p>
                        <p class = "problemProperty"><b>Tác giả: </b>
                            @foreach (var author in listAuthors)
                            {
                                <span style="font-size: 16rem; font-weight: bold; color: #989898">@author.accountName  </span>
                            }
                        </p>
                    </div>
                </div>
                <div class="problemCategory">
                    <p style="margin: 0; margin-bottom: 5px;">Dạng bài</p>
                    @if(listCategories != null)
                    {
                        foreach(Category cate in listCategories)
                        {
                            <div class="CategoryBox">@cate.name</div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script>
        CKEDITOR.replace('editor', {
            height: '200px',
        });
    </script>
    <script>
        function PostRootComment(postId)
        {
            console.log("Submit");
            for ( instance in CKEDITOR.instances)
                CKEDITOR.instances[instance].updateElement();

            var content = document.getElementById("editor").value;

            let data = new URLSearchParams();
            data.append("postID", postId);
            data.append("content", content);

            CKEDITOR.instances["editor"].setData('');

            fetch("https://localhost:5001/Comment/PostComment", {
                method :'post',
                body : data
            })
            .then(res => {
                if(res.ok)
                {
                    return res.text();
                }
            })
            .then(data => {
                $(".listComments").append(data);
            })
            .catch(err => console.log(err));

            return false;
        }
    </script>
}