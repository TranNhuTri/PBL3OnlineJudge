@using PBL3.Models
@using Microsoft.AspNetCore.Http
@{
    ViewData["Title"] = "Danh sách bài tập";
    var listCategories = (List<Category>)ViewData["ListCategories"];
}
@model List<Problem>;
<div class="listProblemsPage">
    <div class="grid">
        <div class="grid_row">
            <div class="grid_column-9">
                <div class="listProblems_container">
                    <div class="listProblems_header">
                        <h1>Danh sách bài tập</h1>
                    </div>
                    <table cellspacing="0" cellpadding="0" class="table listProblems_table">
                        <thead>
                            <tr>
                                <th></th>
                                <th class = "number">#</th>
                                <th class = "title">
                                    Tên Bài
                                </th>
                                <th class = "points">
                                    Độ Khó
                                </th>
                                <th class = "successRate">
                                    Tỉ Lệ AC
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                                @for (int i = 0; i < Model.Count; i++)
                                {
                                    <tr class= "listProblemRow">
                                        @if(!String.IsNullOrEmpty(Context.Session.GetString("AccountName")))
                                        {
                                            if(Model[i].submissions.Where(s => s.account.accountName == Context.Session.GetString("AccountName")).ToList().Count > 0)
                                            {
                                                if(Model[i].submissions.Where(s => s.account.accountName == Context.Session.GetString("AccountName") && s.status == "Accepted").Select(s => s).ToList().Count > 0)
                                                {
                                                    if(Model[i].isPublic == false)
                                                    {
                                                        <td class = "icon" style="color: #00bb00;"><i class="fas fa-lock"></i></td>
                                                    }
                                                    else
                                                    {
                                                        <td class = "icon" style="color: #00bb00;"><i class="fas fa-check"></i></td>
                                                    }
                                                }
                                                else
                                                {
                                                    if(Model[i].isPublic == false)
                                                    {
                                                        <td class = "icon" style="color: #ff0000ba;"><i class="fas fa-lock"></i></td>
                                                    }
                                                    else
                                                    {
                                                        <td class = "icon" style="color: #ff0000ba;"><i class="fas fa-times"></i></td>
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                if(Model[i].isPublic == false)
                                                {
                                                    <td class = "icon" style="color: #0000006b;"><i class="fas fa-lock"></i></td>
                                                }
                                                else
                                                {
                                                    <td></td>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <td></td>
                                        }
                                        <td class = "problemNumber">@(ViewBag.currentPage + i)</td>
                                        <td class = "problemTitle">
                                            <a asp-controller = "Problems" asp-action = "Problem" asp-route-id = "@Model[i].ID" class = "problemTitle_link">@Model[i].title</a>
                                        </td>
                                        @{
                                            float successRate = 0;
                                            if(Model[i].submissions.ToList().Count != 0)
                                            {
                                                successRate = (float)Model[i].submissions.Where(s => s.status == "Accepted").Select(s => s).ToList().Count / Model[i].submissions.ToList().Count*100;
                                            }
                                        }
                                        <td class = "problemDifficullity">@Model[i].difficulty</td>
                                        <td class = "problemSuccessRate">@successRate.ToString("n2") %</td>
                                    </tr>
                                }
                        </tbody>
                    </table>
                </div>
                @{
                    string[] param = {"Index", "Problems"};
                }
                @await Html.PartialAsync("_Pagination", param)
            </div>
            <div class="grid_column-3">
                @await Html.PartialAsync("_SearchProblemForm1", ViewData["SearchProblemInfor"])
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script>
        new SlimSelect({
            select: '#CategoryIds',
            placeholder: 'Chọn dạng bài',
            searchText: 'Không thể tìm thấy',
        })
    </script>
    <script>
        var submitButton = document.querySelector(".problemFillterSubmit_button");
        var hideSolvedCheckBox = document.querySelector("#hideSolvedProblem");
        if(hideSolvedCheckBox != null)
        {
            hideSolvedCheckBox.addEventListener('change', function()
            {
                submitButton.click();
            });
        }
    </script>
}