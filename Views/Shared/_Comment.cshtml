@model Comment
<div class="comment_item" id = "comment@(Model.ID)">
    <div style="display: flex;">
        <a href="">
            <div class = "comment_avar"></div>
        </a>
        <div class="comment_container">
            <a href="" class="comment_author">
                @Model.account.accountName
            </a>
            <div class="comment_content">
                @Html.Raw(@Model.content)
            </div>
        </div>
    </div>
    <div class="comment_dot">
        <i class="fas fa-ellipsis-h"></i>
        <div id="comment_extern-tool@(Model.ID)" class="comment_extern-tool">
            <span class = "delete_comment" onclick="deleteComment('@Model.ID')">Xóa</span>
            <span class = "hide_comment" onclick="hideComment('@Model.ID')">Ẩn</span>
        </div>
    </div>
    @if(Model.likes.Where(p => p.status == true).ToList().Count == 0)
    {
        <div class="comment_likes" id = "comment_likes@(Model.ID)" style="opacity: 0;">
            <i class="fas fa-thumbs-up"></i>
            <span id = "comment_numlikes@(Model.ID)">@Model.likes.Where(p => p.status == true).ToList().Count</span>
        </div>
    }
    else
    {
        <div class="comment_likes" id = "comment_likes@(Model.ID)" style="opacity: 1;">
            <i class="fas fa-thumbs-up"></i>
            <span id = "comment_numlikes@(Model.ID)">@Model.likes.Where(p => p.status == true).ToList().Count</span>
        </div>
    }
</div>
<div class="comment_tool" id = "comment_tool@(Model.ID)">
    @if(Model.likes.FirstOrDefault(p => p.account.accountName == Context.Session.GetString("AccountName") && p.status == true) == null)
    {
        <span class="comment_tool_like" id = "comment_tool_like@(Model.ID)" onclick="LikeComment('@Model.ID')">Thích</span>
    }
    else
    {
        <span class="comment_tool_like comment_tool_like--active" id = "comment_tool_like@(Model.ID)" onclick="LikeComment('@Model.ID')">Thích</span>
    }
    @if(Model.level < 3)
    {
        <span class="comment_tool_reply" onclick="LoadCommentBox('@Model.ID')">Trả lời</span>
    }
    else
    {
        <span class="comment_tool_reply" onclick="LoadCommentBox('@Model.rootCommentID')">Trả lời</span>
    }
    @if(DateTime.Now.Subtract(Model.timeCreate).Hours < 24){
        <span>@DateTime.Now.Subtract(Model.timeCreate).Hours giờ</span>
    } 
    else
    {
        <span>@DateTime.Now.Subtract(Model.timeCreate).Days) ngày</span>
    }
    @if(Model.child.Count > 0)
    {
        <span class="comment-load-child" id = "comment-load-child@(Model.ID)" onclick="LoadCommentChild('@Model.ID')">Xem phản hồi</span>
    }
    @if(Model.level < 3)
    {
        <div class="comment_child" id = "comment_child@(Model.ID)">
        </div>
    }
    <div class="comment_box" id = "comment-box@(Model.ID)">
        <i class="fas fa-times comment_box_icon" onclick="CloseCommentBox('@Model.ID')"></i>
        <form onsubmit="return PostCommentData('@Model.ID', '@Model.postID')">
            <textarea name="content" id="editor@(Model.ID)" data-first = "1" cols="30" rows="10" value = ""></textarea>
            <button class="button comment_button">Gửi</button>
        </form>
    </div>
</div>